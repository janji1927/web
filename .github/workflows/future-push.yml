name: Cypress Tests (parallel)

on: [push]

env:
  ESLINT_NO_DEV_ERRORS: true
  TSC_COMPILE_ON_ERROR: true
  IMAGE_INLINE_SIZE_LIMIT: 0
  INLINE_RUNTIME_CHUNK: false
  REACT_APP_HIDE_SPLASH: false
  REACT_APP_UNCHAINED_ETHEREUM_HTTP_URL: https://dev-api.ethereum.shapeshift.com
  REACT_APP_UNCHAINED_ETHEREUM_WS_URL: wss://dev-api.ethereum.shapeshift.com
  REACT_APP_UNCHAINED_BITCOIN_HTTP_URL: https://dev-api.bitcoin.shapeshift.com
  REACT_APP_UNCHAINED_BITCOIN_WS_URL: wss://dev-api.bitcoin.shapeshift.com
  REACT_APP_PORTIS_DAPP_ID: 8609e6a8-e0dc-45e6-a0ad-edde63a4cdda
  REACT_APP_ETHEREUM_NODE_URL: https://mainnet.infura.io/v3/d734c7eebcdf400185d7eb67322a7e57
  REACT_APP_METAMASK_DEEPLINK_URL: https://metamask.app.link/dapp/app.shapeshift.com

jobs:
  test:
    name: Cypress run
    runs-on: ubuntu-20.04
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run 3 copies of the current job in parallel
        containers: [1, 2, 3]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Restore the previous NPM modules and Cypress binary archives.
      # Any updated archives will be saved automatically after the entire
      # workflow successfully finishes.
      # See https://github.com/actions/cache
      # we use exact restore key to avoid NPM module snowballing
      # https://glebbahmutov.com/blog/do-not-let-npm-cache-snowball/
      - name: Cache central NPM modules
        uses: actions/cache@v2
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-node-${{ github.ref }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ github.ref }}-${{ hashFiles('**/package-lock.json') }}

      # we use the exact restore key to avoid Cypress binary snowballing
      # https://glebbahmutov.com/blog/do-not-let-cypress-cache-snowball/
      - name: Cache Cypress binary
        uses: actions/cache@v2
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-cypress-${{ github.ref }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            cypress-${{ runner.os }}-cypress-${{ github.ref }}-${{ hashFiles('**/package.json') }}

      # Cache local node_modules to pass to testing jobs
      - name: Cache local node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ github.ref }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-${{ github.ref }}-

      - name: install dependencies and verify Cypress
        env:
          # make sure every Cypress install prints minimal information
          CI: 1
        run: |
          yarn install --frozen-lockfile
          npx cypress cache path
          npx cypress cache list
          npx cypress verify
          npx cypress info

      # because of "record" and "parallel" parameters
      # these containers will load balance all found tests among themselves
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          record: true
          build: yarn run build
          start: yarn dev
          parallel: true
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 180
          browser: chrome
          group: 'Chrome tests'
        env:
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          CYPRESS_PROJECT_ID: 'vpyrho'
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
