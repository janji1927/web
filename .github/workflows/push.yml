name: Cypress Tests

on: [push]

env:
  # TODO - set in GitHub KV store
  ESLINT_NO_DEV_ERRORS: true
  TSC_COMPILE_ON_ERROR: true
  IMAGE_INLINE_SIZE_LIMIT: 0
  INLINE_RUNTIME_CHUNK: false
  REACT_APP_HIDE_SPLASH: false
  REACT_APP_UNCHAINED_ETHEREUM_HTTP_URL: https://dev-api.ethereum.shapeshift.com
  REACT_APP_UNCHAINED_ETHEREUM_WS_URL: wss://dev-api.ethereum.shapeshift.com
  REACT_APP_UNCHAINED_BITCOIN_HTTP_URL: https://dev-api.bitcoin.shapeshift.com
  REACT_APP_UNCHAINED_BITCOIN_WS_URL: wss://dev-api.bitcoin.shapeshift.com
  REACT_APP_PORTIS_DAPP_ID: 8609e6a8-e0dc-45e6-a0ad-edde63a4cdda
  REACT_APP_ETHEREUM_NODE_URL: https://mainnet.infura.io/v3/d734c7eebcdf400185d7eb67322a7e57
  REACT_APP_METAMASK_DEEPLINK_URL: https://metamask.app.link/dapp/app.shapeshift.com

# TODO - set these as secrets so we can use them
#  ESLINT_NO_DEV_ERRORS: ${{ secrets.ESLINT_NO_DEV_ERRORS }}
#  TSC_COMPILE_ON_ERROR: ${{ secrets.TSC_COMPILE_ON_ERROR }}
#  IMAGE_INLINE_SIZE_LIMIT: ${{ secrets.IMAGE_INLINE_SIZE_LIMIT }}
#  INLINE_RUNTIME_CHUNK: ${{ secrets.INLINE_RUNTIME_CHUNK }}
#  REACT_APP_HIDE_SPLASH: ${{ secrets.REACT_APP_HIDE_SPLASH }}
#  REACT_APP_UNCHAINED_ETHEREUM_HTTP_URL: ${{ secrets.REACT_APP_UNCHAINED_ETHEREUM_HTTP_URL }}
#  REACT_APP_UNCHAINED_ETHEREUM_WS_URL: ${{ secrets.REACT_APP_UNCHAINED_ETHEREUM_WS_URL }}
#  REACT_APP_UNCHAINED_BITCOIN_HTTP_URL: ${{ secrets.REACT_APP_UNCHAINED_BITCOIN_HTTP_URL }}
#  REACT_APP_UNCHAINED_BITCOIN_WS_URL: ${{ secrets.REACT_APP_UNCHAINED_BITCOIN_WS_URL }}
#  REACT_APP_PORTIS_DAPP_ID: ${{ secrets.REACT_APP_PORTIS_DAPP_ID }}
#  REACT_APP_ETHEREUM_NODE_URL: ${{ secrets.REACT_APP_ETHEREUM_NODE_URL }}
#  REACT_APP_METAMASK_DEEPLINK_URL: ${{ secrets.REACT_APP_METAMASK_DEEPLINK_URL }}

jobs:
  install-cypress:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache app dependencies
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-${{ hashFiles('yarn.lock') }}

      - name: Install
        run: yarn install --frozen-lockfile

      - name: Save build folder
        uses: actions/upload-artifact@v2
        with:
          name: build
          if-no-files-found: error
          path: build

      - name: Cypress install
        uses: cypress-io/github-action@v2
        with:
          # Disable running of tests within install job
          runTests: false
          record: true
          build: yarn run build
          start: yarn dev
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 180
          browser: chrome

  run-tests:
    runs-on: ubuntu-latest
    needs: install
    strategy:
      fail-fast: false
      matrix:
        # Run copies of the current job in parallel
        containers: [ 1, 2, 3, 4, 5 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download the build folders
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build

      - name: 'UI Tests - Chrome'
        uses: cypress-io/github-action@v2
        with:
          # We have already installed all dependencies above
          install: false
          record: true
          build: yarn run build
          start: yarn dev
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 180
          browser: chrome
          parallel: true
        env:
          # TODO - pass as an environment variables
          # CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # CYPRESS_PROJECT_ID: ${{ secrets.CYPRESS_PROJECT_ID }}
          # FIXME - Hardcode a burner key for testing, remove and use env vars
          CYPRESS_RECORD_KEY: '88313c74-56f3-46af-89e5-e667bff1ba49'
          CYPRESS_PROJECT_ID: 'vpyrho'
